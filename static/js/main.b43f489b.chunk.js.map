{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","this","props","title","children","React","Component","FeedbackOptions","options","onLeaveFeedback","className","styles","map","option","onClick","name","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","onFeedbackClick","event","feedback","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","Math","floor","keys","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPAceA,E,4JAXb,WACE,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,oCACE,6BAAKD,IACJC,S,GANaC,IAAMC,W,gBCgBbC,E,4JAdb,WACE,MAAqCN,KAAKC,MAAlCM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACE,qBAAKC,UAAWC,IAAO,mBAAvB,SACGH,EAAQI,KAAI,SAACC,GAAD,OACX,wBAAqBC,QAASL,EAAiBM,KAAMF,EAArD,SACGA,GADUA,Y,GANOR,IAAMC,WCcrBU,E,4JAdb,WACE,MAA0Df,KAAKC,MAAvDe,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACjC,OACE,gCACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,Y,GATThB,IAAMC,WCOhBgB,E,4JALX,WACI,OAAO,4BAAIrB,KAAKC,MAAMqB,c,GAHHlB,IAAMC,WCoDlBkB,E,4MA9CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAACC,GACjB,IAAMC,EAAWD,EAAME,OAAOd,KAC9B,EAAKe,UAAS,SAAAC,GAAe,OAAO,eAAGH,EAAWG,EAAUH,GAAY,O,EAG1EI,mBAAqB,WAEnB,OADwBC,OAAOC,OAAO,EAAKT,OACpBU,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IAAI,I,EAGvDC,gCAAkC,WAChC,OAAK,EAAKN,qBACcO,KAAKC,MAAO,EAAKf,MAAMR,KAAO,EAAKe,qBAAwB,KAC1D,KAFc,M,4CAKzC,WACE,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBK,QAASyB,OAAOQ,KAAKxC,KAAKwB,OAAQhB,gBAAiBR,KAAKyB,oBAE3E,cAAC,EAAD,CAASvB,MAAM,aAAf,SACGF,KAAK+B,qBACJ,cAAC,EAAD,CACAf,KAAMhB,KAAKwB,MAAMR,KACjBC,QAASjB,KAAKwB,MAAMP,QACpBC,IAAKlB,KAAKwB,MAAMN,IAChBC,MAAOnB,KAAK+B,qBACZX,mBAAoBpB,KAAKqC,oCAEzB,cAAC,EAAD,CAAcf,QAAQ,+B,GAvChBlB,IAAMC,W,MCFxBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,kBAAkB,4C","file":"static/js/main.b43f489b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Section extends React.Component {\r\n  render() {\r\n    const { title, children } = this.props;\r\n    return (\r\n      <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\"\r\n\r\nclass FeedbackOptions extends React.Component {\r\n  render() {\r\n    const { options, onLeaveFeedback } = this.props;\r\n    return (\r\n      <div className={styles['buttons-wrapper']}>\r\n        {options.map((option) => (\r\n          <button key={option} onClick={onLeaveFeedback} name={option}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nclass Statistics extends React.Component {\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n      return (\r\n        <div>\r\n          <p>Good : {good}</p>\r\n          <p>Neutral : {neutral}</p>\r\n          <p>Bad : {bad}</p>\r\n          <p>Total : {total}</p>\r\n          <p>Positive feedback : {positivePercentage}</p>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nclass Notification extends React.Component {\r\n\r\n    render() {\r\n        return <p>{this.props.message}</p>\r\n    }\r\n}\r\n\r\nexport default Notification;","import React from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends React.Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  onFeedbackClick = (event) => {\n    const feedback = event.target.name;\n    this.setState(prevState => { return { [feedback]: prevState[feedback] + 1 } });\n  }\n\n  countTotalFeedback = () => {\n    const totalVotesArray = Object.values(this.state);\n    return totalVotesArray.reduce((acc, el) => acc + el, 0);\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    if (!this.countTotalFeedback()) return null;\n    const positivePercent = Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n    return positivePercent + ' %';\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onFeedbackClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ?\n            <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}>\n            </Statistics> :\n            <Notification message=\"No feedback given\"/>}\n          \n        </Section>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons-wrapper\":\"FeedbackOptions_buttons-wrapper__3SSEg\"};"],"sourceRoot":""}